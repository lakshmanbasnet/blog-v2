I"½W<p>So, this blog post will be all about the <strong>Oracle Database</strong>, lessons from very beginning to advanced level. The contents will be added regularly.</p>

<p><br /></p>

<div class="ab">

If you are searching for resources for Bsc CSIT Seventh Semester(7th sem), then these are some of the links of the materials I got that might be useful for learning and appearing DBA exams.
<br /><br />
<ul>
<li>Database Administration Handbook, short note by Dadhi R. Ghimire available on <a href="http://csitportal.com/wp-content/uploads/2017/02/Database-administration-Handout.pdf" target="blank">csitportal.com</a> </li>

<li>Oracle DBA Concise Handbook(covers 9i to 11g) by Saikat Basak , Oracle Certified Professional on <a href="http://www.conseiller.com.br/wp-content/uploads/2015/05/oracle-dba-concise-handbook.pdf" target="blank">conseiller.com</a></li>
<li>TU CSIT DBA Model/Old Question Collection by  <a href="https://drive.google.com/file/d/0BwOLtlX2QE6xd2E1elVKYU9MTm8/view" target="blank">csitauthority</a></li>
</ul>




</div>

<p><br /></p>

<p><br /></p>

<p>I assume that you have already installed Oracle Database Software 11 g R2 edition on your computer.
<br /></p>

<p>All the commands below are to be executed in <strong>terminal/command</strong> prompt.</p>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i>
At first lets set the SID</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>set ORACLE_SID = xe
</code></pre></div></div>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i>
connect to database with sys dba privileges</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sqlplus / as sysdba
</code></pre></div></div>

<p><br /></p>

<p>After establishing a database connection you can see <code class="highlighter-rouge">SQL&gt;</code> prefixed in your command prompt. We will be doing all our database queries after this <code class="highlighter-rouge">SQL&gt;</code>, remember we donâ€™t need to write this command. Also, all database queries end with a <strong>semicolon.</strong> <code class="highlighter-rouge">;</code>
<br /><br /></p>
<h2 id="some-basic-commands">Some basic commands##</h2>
<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> To search for <strong>server parameter file</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL&gt; nomount;
</code></pre></div></div>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i>
To Show the server parameter file location</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL&gt; show parameter pfile;
</code></pre></div></div>

<p><br />
<i class="fa fa-check-square-o" aria-hidden="true"></i>
To Shutdown database</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL&gt; shutdown immediate;
</code></pre></div></div>

<p>lets rename the parameter file , both the files, the location is the value shown in the <code class="highlighter-rouge">show parameter pfile;</code></p>

<p>we are renaming the file to show that if we change initial parameter file, than it wont go on nomount mode</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL&gt; startup nomount;
</code></pre></div></div>

<p><br /></p>

<p>this means it didnâ€™t get the parameter file specified as we have changed the file name, 
lets rename the filename to previous state</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL&gt; select status from v$instance;
</code></pre></div></div>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i>
To know the name of <strong>control file</strong> (Control file is the heart of database)</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL&gt; select name from v$controlfile;
</code></pre></div></div>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i>
Change to mount mode</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL&gt; alter database mount; 
</code></pre></div></div>

<p><br /></p>

<p>after altering the database mount, now we can see the control file is mounted</p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i>
To show the mount status:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL&gt; select status from v$instance;
</code></pre></div></div>

<p><br />
<i class="fa fa-check-square-o" aria-hidden="true"></i>
Change database to open mode:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL&gt;  alter database open;
</code></pre></div></div>

<p><br />
<i class="fa fa-check-square-o" aria-hidden="true"></i>
 Checking the database status:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SQL&gt; select status from v$instance;
</code></pre></div></div>

<p><br /></p>

<p>we can see the status as <code class="highlighter-rouge">OPEN</code></p>

<hr />

<h2 id="multiplexing-in-oracle">Multiplexing in Oracle##</h2>

<p><br /></p>

<p>We are doing multplexing by using the spfile.</p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> Show/describe the number of column in controlfile</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>desc v$controlfile;
</code></pre></div></div>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> List the control files and their location</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select name from v$controlfile;
</code></pre></div></div>

<p><br /><i class="fa fa-check-square-o" aria-hidden="true"></i></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Alter system set control_files=â€™C:\APP\DBA\ORADATA\ORCL\CONTROL01.CTLâ€™,â€™C:\APP\DBA\ORADATA\ORCL\CONTROL02.CTLâ€™, â€™E:\multiplexing\CONTROL03.CTLâ€™ Scope=spfile;
</code></pre></div></div>

<p><br /></p>

<p>here we are creating new control file one in location of previous control file location and another in different drive.</p>

<p>I made a new folder <code class="highlighter-rouge">multiplexing</code> in E drive so the new control file is in E:\multiplexing</p>

<p>After altering the set of control files, lets shutdown</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>shutdown immediate;
</code></pre></div></div>

<p><br /></p>

<p>the role of spfile is seen when starting the system</p>

<p><i class="fa fa-check-square-o" aria-hidden="true"> Copy our control file to our new location</i> in E drive</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>host copy C:\APP\DBA\ORADATA\ORCL\CONTROL01.CTL  D:\multiplexing\CONTROL03.CTL
</code></pre></div></div>

<p><br /></p>

<p>Here, we are copying from C drive CONTROL01.CTL file to E driveâ€™s CONTROL03.CTL file</p>

<p>if there was only one control file present in the system, then we can similarly copy to make CONTROL02.CTL file</p>

<p>lets startup our system,</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>startup;
</code></pre></div></div>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> Next thing what we are going to do is create pfile from spfile</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>create pfile from spfile;
</code></pre></div></div>

<p><br /></p>

<p>after creating pfile from spfile, now we are backing up our controlfiles, backup is necessary for databases, when one controlfile fails, we can restore from other.</p>

<p>lets check our work by</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select name from v$controlfile;
</code></pre></div></div>

<p><br /></p>

<p>This lists our control file which are in different drives.</p>

<p><br /></p>
<hr />

<h2 id="backing-up-control-files">Backing Up Control Files##</h2>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> Control Files are backed up with</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alter database backup controlfile to trace;
</code></pre></div></div>

<p><br /></p>

<p>the backup will be in ASCII format, where as the original control file will be in binary form.</p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> Get the location/contents of control file:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select value from v$diag_info where name='Diag Trace';
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>
    <p>the alert file will have log of everything</p>
  </li>
  <li>
    <p>scrolling at the bottom we will find the trace file/ back up file with <code class="highlighter-rouge">.trc</code> extension</p>
  </li>
  <li>
    <p>lets open the file</p>
  </li>
  <li>
    <p>this trace file will have instruction for creating manually the controlfile</p>
  </li>
</ul>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> Save the file in the location of multiplexing folder(another drive than C where we created new control file) with new name and type all files.</p>

<p>check the status with</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select status from v$instance;
</code></pre></div></div>

<p><br /></p>

<p>if it is open, shutdown</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>shutdown immediate;
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>now lets open the control file locations and rename them.</li>
</ul>

<p>we assume there is no control file in our system by renaming all the control files, in my case there are three control files , you can list the control files with their location by</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select name from v$controlfile;
</code></pre></div></div>

<p><br /></p>

<p>We are doing this just to see the effect when there is no control file.</p>

<p>after renaming, to see the effect, do</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>startup nomount;
</code></pre></div></div>

<p><br /></p>

<p>it wonâ€™t find/show control files as they have been modified or removed</p>

<p>In such case we need to restore control files.</p>

<p><br /></p>

<h2 id="restoring-control-files">Restoring Control Files##</h2>

<p><br />
<i class="fa fa-check-square-o" aria-hidden="true"></i>  Restore the control files and change to OPEN state by</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@f:\multiplexing\create_ctlfile.sql
</code></pre></div></div>

<p><br /></p>

<p>this is the location of the .trc file we just saved in our F drive</p>

<p>this will restore our original control files, previously we renamed them assuming the files are lost, lets see there will be the original control files restored.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select name from v$controlfile;
</code></pre></div></div>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> Check status</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select status from v$instance;
</code></pre></div></div>

<h2 id="viewing-control-file-names-and-locations">Viewing Control File Names and Locations##</h2>

<p><br />
if our database is in : <strong>nomount/mount/open</strong> stage we can</p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> View location and name of the control filesâ€™ location with:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>show parameter control_files;
</code></pre></div></div>

<p><br /></p>
<hr />

<h2 id="redo-log-file">Redo Log File##</h2>

<ul>
  <li>important for recovery</li>
  <li>logwriter LGWR writes in log file</li>
  <li>more than one group</li>
  <li>fills next group after filling first, and fills in circular fashion</li>
  <li>overrides first after writing last</li>
</ul>

<p>Two modes: archive(before overididng, writes from archiver process, no data loss) and non archive</p>

<p><i class="fa fa-check-square-o" aria-hidden="true"> Show the number of logfile</i></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>desc v$logfile;
</code></pre></div></div>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> List all gorups, redo log files and their members</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select group#, member from v$logile;
</code></pre></div></div>

<p><br /></p>

<p>we can keep copy of each redo logfile by multiplexing.</p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> Show the status of logfile</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select group#,status,members from v$log;
</code></pre></div></div>

<p><br /></p>

<p><i class="fa fa-television" aria-hidden="true"></i> output:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    GROUP# STATUS              MEMBERS
	------ ---------------- ----------
         1 CURRENT                   1
         2 INACTIVE                  1
</code></pre></div></div>

<p><br /></p>

<p>here, the redo log file is writing to group 1 logfile.</p>

<p>Status explained</p>

<ul>
  <li>
    <p><strong>INACTIVE</strong>: redo logfile doesnâ€™t use for instance recovery</p>
  </li>
  <li>
    <p><strong>ACTIVE</strong>: previous logfile where log was written</p>
  </li>
  <li>
    <p><strong>CURRENT</strong>: the file currently being written
<br /></p>
  </li>
</ul>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> Forcefully switch from one log to other</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alter system switch logfile;
</code></pre></div></div>

<p><br /></p>

<p>After doing this, we can check again by</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select group#,status,members from v$log;
</code></pre></div></div>

<p>in my case the group 1 is set to active and 2 to current.</p>

<p><i class="fa fa-television" aria-hidden="true"></i> output</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GROUP# STATUS              MEMBERS
------ ---------------- ----------
     1 ACTIVE                    1
     2 CURRENT                   1
</code></pre></div></div>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> Add a new logfile by multpliplexing</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alter database add logfile member 'C:\ORACLEXE\APP\ORACLE\FAST_RECOVERY_ARE
A\XE\ONLINELOG\01_MF_1_DG0QXZPK_01.LOG' to group 1;
</code></pre></div></div>

<p><i class="fa fa-television" aria-hidden="true"></i> Output</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Database altered.
</code></pre></div></div>

<p>I just renamed my previous logfile by appending _01</p>

<p>Oracle recommends to place each redo file in different drives and similarly the multiplexed file.</p>

<p><br /><br /></p>

<h2 id="dropping-a-logfile">Dropping a Logfile##</h2>

<p><br />
<i class="fa fa-check-square-o" aria-hidden="true"></i>Logfiles can be dropped by <code class="highlighter-rouge">drop</code> command</p>

<p>we are dropping the previous logfile we created</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alter database drop logfile member 'C:\ORACLEXE\APP\ORACLE\FAST_RECOVERY_AR
EA\XE\ONLINELOG\01_MF_1_DG0QXZPK_01.LOG'
</code></pre></div></div>

<p>After dropping the logfile, we need to delete it physically for erasing permanently.</p>

<p><br /></p>
<hr />
<p><br /></p>

<h2 id="adding-a-new-redo-logfile-group-in-oracle-11g-database">Adding a New Redo Logfile Group in Oracle 11g database##</h2>

<p>first lets find the location of our existing logfiles with</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select member from v$logfile;
</code></pre></div></div>

<p><i class="fa fa-television" aria-hidden="true"></i> output</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MEMBER
----------------------------------------------------

C:\ORACLEXE\APP\ORACLE\FAST_RECOVERY_AREA\XE\ONLINELOG\O1_MF_1_DG0QXZPK_.LOG
C:\ORACLEXE\APP\ORACLE\FAST_RECOVERY_AREA\XE\ONLINELOG\O1_MF_2_DG0QY303_.LOG
</code></pre></div></div>

<p><br />
<i class="fa fa-check-square-o" aria-hidden="true"></i>Add a new Redo Logfile Group</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alter database add logfile group 4 'C:\ORACLEXE\APP\ORACLE\FAST_RECOVERY_AREA\XE\ONLINELOG\O1_MF_1_DG0QXZPK_02.LOG' size 50M;
</code></pre></div></div>

<p><br /></p>

<p>Here, the size is 50MB.</p>

<p>Now, we can verify with:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select group#, members, status from v$log;
</code></pre></div></div>

<p><i class="fa fa-television" aria-hidden="true"></i> output</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   GROUP#    MEMBERS STATUS
-------- ---------- ------------
        1          1 INACTIVE
        2          1 CURRENT
        4          1 UNUSED
</code></pre></div></div>

<p>we can alter the status with</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alter system switch logfile;
</code></pre></div></div>

<p>and if we redo</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select group#, members, status from v$log;
</code></pre></div></div>

<p><i class="fa fa-television" aria-hidden="true"></i> output</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> GROUP#    MEMBERS STATUS
------- ---------- ---------
      1          1 INACTIVE
      2          1 ACTIVE
      4          1 CURRENT
</code></pre></div></div>

<p>Group 4 is in Current status.</p>

<p><br /></p>
<h2 id="dropping-group">Dropping Group##</h2>

<ul>
  <li>possible in inactive state only</li>
  <li>I am trying to drop group 4, so lets switch the group with  <code class="highlighter-rouge">alter system switch logfile;</code></li>
</ul>

<p>until group 4, is in inactive stage, lets keep altering.</p>

<p><i class="fa fa-television" aria-hidden="true"></i> output</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  GROUP#    MEMBERS STATUS
------ ---------- -------------
       1          1 INACTIVE
       2          1 CURRENT
       4          1 INACTIVE
</code></pre></div></div>

<p><br /></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> Dropping group</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> alter database drop logfile group 4;
</code></pre></div></div>

<p>now there are only two groups left.</p>

<p><br /></p>

<p><strong>useful commands</strong></p>

<p><i class="fa fa-check-square-o" aria-hidden="true"> Show size and details about the logfile</i></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select * from v$log;
</code></pre></div></div>

<p><br /></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>select bytes, status, members from v$log;
</code></pre></div></div>

<p><i class="fa fa-television" aria-hidden="true"></i> output</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>BYTES STATUS              MEMBERS
------ ---------------- ----------
52428800 INACTIVE                  1
52428800 CURRENT                   1
</code></pre></div></div>

<p><br /></p>

<h2 id="resizing-logfiles">Resizing Logfiles##</h2>

<ul>
  <li>You cannot resize logfiles.</li>
  <li>If you want to resize a logfile create a new logfile group with the new size and subsequently drop the old logfile group.</li>
</ul>

<p><br /></p>

<h2 id="renaming-or-relocating-logfiles-in-oracle-11g">Renaming or Relocating Logfiles in Oracle 11g##</h2>

<p>To Rename or Relocate Logfiles perform the following steps</p>

<p>For Example, suppose we want to move a logfile from <code class="highlighter-rouge">C:\APP\DBA\ORADATA\ORCL\REDO01.LOG</code> to <code class="highlighter-rouge">D:\multiplexing\REDO01.LOG</code>, then this is achived by:</p>

<p><i class="fa fa-check-square-o" aria-hidden="true"></i> Steps to rename/relocate logfiles:</p>

<p><i class="fa fa-caret-right" aria-hidden="true"></i>
Shutdown the database</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>shutdown immediate; 
</code></pre></div></div>

<p><i class="fa fa-caret-right" aria-hidden="true"></i>
Move the logfile from Old location to new location using operating system command</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>host move C:\APP\DBA\ORADATA\ORCL\REDO01.LOG  D:\multiplexing\REDO01.LOG
</code></pre></div></div>

<p><i class="fa fa-caret-right" aria-hidden="true"></i>
Start and mount the database</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>startup mount
</code></pre></div></div>

<p><i class="fa fa-caret-right" aria-hidden="true"></i>
Now give the following command to change the location in controlfile</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alter database rename file 'C:\APP\DBA\ORADATA\ORCL\REDO01.LOG' to 'D:\multiplexing\REDO01.LOG';
</code></pre></div></div>

<p><i class="fa fa-caret-right" aria-hidden="true"></i>
Open the database</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>alter database open;
</code></pre></div></div>

<hr />

<p>last updated on Tuesday, April 11, 2017</p>

:ET